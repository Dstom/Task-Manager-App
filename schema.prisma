// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Tag {
  id              String @id @default(cuid())
  Name            String
  BackgroundColor String
  cardId          String @unique
  card            Card   @relation(fields: [cardId], references: [id])
}

model Card {
  id         String   @id @default(cuid())
  name       String
  imageUrl   String?
  tags       Tag[]
  cardListId String   @unique
  cardList   CardList @relation(fields: [cardListId], references: [id])
}

model CardList {
  id    String @id @default(cuid())
  title String
  cards Card[]

  boardId String @unique
  board   Board  @relation(fields: [boardId], references: [id])
}

model Board {
  id       String     @id @default(cuid())
  title    String
  icon     String
  owner    User?      @relation(fields: [ownerId], references: [id])
  ownerId  String?
  cardList CardList[]
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String?  @unique
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  password  String
  boards    Board[]
  @@map(name: "users")
}
